gghighlight_line(zz, aes(cum_drive, p, colour = pcolor), predicate = driver == "all")
gghighlight_line(zz, aes(cum_drive, p, colour = pcolor), predicate = driver %in% "all")
d <- purrr::map_dfr(
letters,
~ data.frame(idx = 1:400,
value = cumsum(runif(400, -1, 1)),
type = .,
stringsAsFactors = FALSE))
d
head(d)
tail(d)
ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)), alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)))
ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_bw() +
labs(x = "cumulative driving time (hours)",
y = "probability of critical events",
title = "Cumulative driving time and estimated probability of having critical events")
ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_bw() +
labs(x = "cumulative driving time (hours)",
y = "probability of CE",
title = "Cumulative driving time and estimated probability of CE")
ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of CE",
title = "Cumulative driving time and estimated probability of CE")
ggsave("figs/fit_logit.png", p0, width = 10, height = 6.18, dpi = 300)
p0 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of CE",
title = "Cumulative driving time and estimated probability of CE")
p0
ggsave("figs/fit_logit.png", p0, width = 10, height = 6.18, dpi = 300)
pacman::p_load(dplyr, broom, bayesplot, tidyr, gghighlight)
fitlogit = readRDS("./fit/logit_fit.rds")
poifit = readRDS("fit/poisson_fit.rds")
nhppfit = readRDS("fit/nhpp_fit_non_center.rds")
inv_logit = function(x) return()
z = fitlogit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
dmat = as.matrix(data.frame(x0 = rep(1, 1301),
x1 = seq(0, 13, 0.01)))
zz = dmat %*% t(as.matrix(z[,2:3])) %>%
as.vector() %>%
as.data.frame() %>%
magrittr::set_colnames("p") %>%
mutate(driver = rep(z$driver, each = 1301),
cum_drive = rep(seq(0, 13, 0.01), length(unique(z$driver))),
p = boot::inv.logit(p),
pcolor = ifelse(driver == "all", "blue", "grey"),
psize = ifelse(driver == "all", 1, 0.5)) %>%
arrange(desc(driver))
p0 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of CE")
# "Cumulative driving time and estimated probability of CE"
p0
ggsave("figs/fit_logit.png", p0, width = 10, height = 6.18, dpi = 300)
z = fitlogit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
dmat = as.matrix(data.frame(x0 = rep(1, 1301),
x1 = seq(0, 13, 0.01)))
zz = dmat %*% t(as.matrix(z[,2:3])) %>%
as.vector() %>%
as.data.frame() %>%
magrittr::set_colnames("p") %>%
mutate(driver = rep(z$driver, each = 1301),
cum_drive = rep(seq(0, 13, 0.01), length(unique(z$driver))),
p = boot::inv.logit(p),
pcolor = ifelse(driver == "all", "blue", "grey"),
psize = ifelse(driver == "all", 1, 0.5)) %>%
arrange(desc(driver))
p0 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.5) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of SCEs")
# "Cumulative driving time and estimated probability of CE"
p0
ggsave("figs/fit_logit.png", p0, width = 10, height = 6.18, dpi = 300)
z = fitlogit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
dmat = as.matrix(data.frame(x0 = rep(1, 1301),
x1 = seq(0, 13, 0.01)))
zz = dmat %*% t(as.matrix(z[,2:3])) %>%
as.vector() %>%
as.data.frame() %>%
magrittr::set_colnames("p") %>%
mutate(driver = rep(z$driver, each = 1301),
cum_drive = rep(seq(0, 13, 0.01), length(unique(z$driver))),
p = boot::inv.logit(p),
pcolor = ifelse(driver == "all", "blue", "grey"),
psize = ifelse(driver == "all", 1, 0.5)) %>%
arrange(desc(driver))
p0 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.75) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of SCEs")
# "Cumulative driving time and estimated probability of CE"
p0
ggsave("figs/fit_logit.png", p0, width = 10, height = 6.18, dpi = 300)
z = poifit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
z = poifit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
dmat = as.matrix(data.frame(x0 = rep(1, 1301),
x1 = seq(0, 13, 0.01)))
zz = dmat %*% t(as.matrix(z[,2:3])) %>%
as.vector() %>%
as.data.frame() %>%
magrittr::set_colnames("p") %>%
mutate(driver = rep(z$driver, each = 1301),
cum_drive = rep(seq(0, 13, 0.01), length(unique(z$driver))),
p = exp(p),
pcolor = ifelse(driver == "all", "blue", "grey"),
psize = ifelse(driver == "all", 1, 0.5)) %>%
arrange(desc(driver))
p0 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.75) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "probability of SCEs")
p0
z = poifit %>%
tidy(c("non-varying", "varying")) %>%
filter(grepl("Intercept|cum_drive", term)) %>%
select(driver = level, term, estimate) %>%
mutate_if(is.factor, as.character) %>%
mutate(driver = ifelse(is.na(driver), "all", driver)) %>%
spread(key = term, value = estimate)
z = z %>%
mutate(`(Intercept)` = ifelse(driver != "all",
`(Intercept)` + z$`(Intercept)`[1],
`(Intercept)`),
cum_drive = ifelse(driver != "all",
cum_drive + z$cum_drive[1],
cum_drive))
dmat = as.matrix(data.frame(x0 = rep(1, 1301),
x1 = seq(0, 13, 0.01)))
zz = dmat %*% t(as.matrix(z[,2:3])) %>%
as.vector() %>%
as.data.frame() %>%
magrittr::set_colnames("p") %>%
mutate(driver = rep(z$driver, each = 1301),
cum_drive = rep(seq(0, 13, 0.01), length(unique(z$driver))),
p = exp(p),
pcolor = ifelse(driver == "all", "blue", "grey"),
psize = ifelse(driver == "all", 1, 0.5)) %>%
arrange(desc(driver))
p1 = ggplot() +
geom_line(data = filter(zz, driver != "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor)),
alpha = 0.75) +
geom_line(data = filter(zz, driver == "all"),
aes(x = cum_drive, y = p, group = driver, color = I(pcolor))) +
theme_test() +
labs(x = "cumulative driving time (hours)",
y = "rate of SCEs")
# "Cumulative driving time and estimated probability of CE"
p1
ggsave("figs/fit_Poisson.png", p1, width = 10, height = 6.18, dpi = 300)
z = nhppfit %>%
tidy()
View(z)
z = nhppfit %>%
tidy() %>%
filter(grepl("true", term))
z = nhppfit %>%
tidy()
z = nhppfit %>%
tidy() %>%
filter(grepl("true|beta", term))
z
warnings
warnings()
z = nhppfit %>%
tidy() %>%
filter(grepl("true|beta", term)) %>%
select(-std.eror)
z = nhppfit %>%
tidy() %>%
filter(grepl("true|beta", term)) %>%
select(-std.error)
z
z = nhppfit %>%
tidy()
z = nhppfit %>%
tidy() %>%
filter(grepl("theta_temp", term)) %>%
select(-std.error)
t = rep(seq(0, 13, 0.01), nrow(z))
length(z)
length(t)
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull())
dmat
rep(1:3, 1:3)
rep(1:3, each = 3)
rep(1:3,  3)
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, nrow(z)),
t = rep(seq(0, 13, 0.01), nrow(z))
t = )
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, nrow(z)),
t = rep(seq(0, 13, 0.01), nrow(z)))
beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301)
length(beta)
length(t)
z$estimate
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, 1301),
t = rep(seq(0, 13, 0.01), nrow(z)))
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, 1301),
t = rep(seq(0, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
plp = function(beta, theta, t) return(beta/theta^beta*t^(beta-1))
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, 1301),
t = rep(seq(0, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
dmat %>%
ggplot(aes(t, intensity)) + geom_line()
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1301),
theta = rep(z$estimate, 1301),
shift_id = rep(z$term, 1301),
t = rep(seq(0, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
dmat %>%
ggplot(aes(t, intensity, group = )) + geom_line()
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) + geom_line(alpha = 0.5)
View(dmat)
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1300),
theta = rep(z$estimate, 1300),
shift_id = rep(z$term, 1300),
t = rep(seq(0.1, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1300)
t = rep(seq(0.1, 13, 0.01), nrow(z))
length(seq(0.1, 13, 0.01))
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull() %>%
rep(nrow(z)*1300),
theta = rep(z$estimate, 1300),
shift_id = rep(z$term, 1300),
t = rep(seq(0.01, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) + geom_line(alpha = 0.5)
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.5) +
ylim(c(0, 1))
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.5) +
ylim(c(0, 0.3))
beta[1:5]
nhppfit %>%
tidy()
nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull()
nhppfit %>%
tidy()
nhppfit %>%
tidy() %>%
filter(grepl("beta", term))
dmat = data.frame(beta = nhppfit %>%
tidy() %>%
filter(grepl("beta", term)) %>%
pull(estimate) %>%
rep(nrow(z)*1300),
theta = rep(z$estimate, 1300),
shift_id = rep(z$term, 1300),
t = rep(seq(0.01, 13, 0.01), nrow(z))) %>%
mutate(intensity = plp(beta, theta, t))
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.5) +
ylim(c(0, 0.3))
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.5)
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.1)
dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP")
ggsave("figs/fit_plp.png", p2, width = 10, height = 6.18, dpi = 300)
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP")
ggsave("figs/fit_plp.png", p2, width = 10, height = 6.18, dpi = 300)
dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP")
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP") +
theme(legend.position = "none")
p2
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP") +
ylim(c(0, 0.75)) +
theme(legend.position = "none")
p2
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.1) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP") +
#ylim(c(0, 0.75)) +
theme(legend.position = "none")
p2
p2
ggsave("figs/fit_plp.png", p2, width = 10, height = 6.18, dpi = 300)
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.3) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP") +
#ylim(c(0, 0.75)) +
theme(legend.position = "none")
p2
p2 = dmat %>%
ggplot(aes(t, intensity, group = shift_id, color = shift_id)) +
geom_line(alpha = 0.2) +
labs(x = "cumulative driving time (hours)",
y = "intensity of the PLP") +
#ylim(c(0, 0.75)) +
theme(legend.position = "none")
p2
ggsave("figs/fit_plp.png", p2, width = 10, height = 6.18, dpi = 300)
fit = stan_glmer(SCE_binary ~ age +
(1 + cum_drive|driver), data = as.data.frame(agg30),
family = binomial(link = "logit"),
QR=TRUE, chains = 1, iter = 2000)
fit = stan_glmer(SCE_binary ~ age +
(1 + cum_drive|driver), data = as.data.frame(agg30),
family = binomial(link = "logit"),
chains = 1, iter = 1000)
z = tidy(fit)
View(z)
z
fit
fitlogit
tidy(fitlogit, "varying")
tidy(fitlogit, "non-varying")
tidy(fitlogit, "hierarchical")
fitlogit
